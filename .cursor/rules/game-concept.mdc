---
description: sasha-unity project development
globs: 
alwaysApply: false
---
---
description: sasha-unity project
globs: 
alwaysApply: false
---
# ArmoredFrame (AF) 게임 컨셉

## 개요
ArmoredFrame은 프레임 기반 메카닉 커스터마이징 자동 시뮬레이션 전략 게임입니다. 아머드코어 시리즈에서 영감을 받아, 플레이어는 다양한 파츠를 조합하여 자신만의 AF(ArmoredFrame)를 구성하고, 이를 활용해 자동으로 진행되는 전략적 전투를 관전하게 됩니다.

## 핵심 요소

### AF 파츠 시스템
- **Frame**: AF의 기본 골격으로, 전체적인 성능과 파츠 호환성을 결정합니다.
  - **경량 프레임**: 속도와 회피에 특화되었지만, 무거운 장비 장착에 제한이 있습니다.
  - **범용 프레임**: 균형 잡힌 성능으로 다양한 파츠와의 호환성이 좋습니다.
  - **중장갑 프레임**: 내구성이 높고 강력한 장비 장착이 가능하지만, 이동성이 낮습니다.

- **Body**: 프레임 위에 장착되는 중심부로, 전체 내구도와 파츠 장착 제한에 영향을 줍니다.
- **Head**: 센서 범위, 타겟팅 기능, 정확도, 가시성을 담당합니다.
- **Arms(Left/Right)**: 무기 장착 및 근접 전투 능력을 결정합니다.
- **Legs**: 이동 능력과 안정성을 결정합니다.
- **Backpack**: 특수 능력과 에너지 저장소를 제공합니다.

- **프레임-파츠 호환성**: 각 프레임 타입마다 최적화된 파츠 조합이 있으며, 호환되지 않는 파츠를 장착할 경우 성능 저하가 발생할 수 있습니다.

### 무기 시스템
- **무기 종류**:
  - **근접형 무기**: 가까운 거리에서 높은 데미지를 주는 무기입니다.
  - **중거리형 무기**: 중간 거리에서 효과적인 무기입니다.
  - **원거리형 무기**: 멀리 있는 적을 타격할 수 있는 무기입니다.

- **기술 타입**:
  - **에너지 기반**: 에너지를 소모하여 작동하는 첨단 무기로, 높은 데미지를 주지만 과열 관리가 필요합니다.
  - **실탄 기반**: 물리적 탄약을 소모하는 재래식 무기로, 안정적이지만 탄약 관리가 필요합니다.
  - **보조 시스템**: 방어형 또는 지원형 장비로 직접 데미지보다 전투 지원에 특화되어 있습니다.

- **무기 속성**:
  - **데미지 유형**: 물리, 에너지, 폭발, 관통, 전기 등 다양한 속성을 가집니다.
  - **정확도**: 거리와 상황에 따라 변화하며, 파일럿 기술과 AF 파츠에 영향을 받습니다.
  - **효과 범위**: 단일 대상, 광역, 관통, 지속 효과 등으로 구분됩니다.
  - **특수 매커니즘**: 실탄 기반은 탄약 관리, 에너지 기반은 과열 관리 등의 고유한 메커니즘을 가집니다.

- **커스터마이징**:
  - **업그레이드**: 무기 부품 개선을 통한 성능 향상이 가능합니다.
  - **특수 효과**: 기본 데미지 외에 추가 효과를 부여하여 전술적 다양성을 높입니다.
  - **특수 기능**: 무기별 고유 기능을 연구하여 독특한 전투 방식을 개발할 수 있습니다.

### 파츠별 독립 내구도 시스템
- 각 파츠는 독립적인 내구도를 가지며, 파츠 파괴 시 해당 기능을 상실합니다.
- **Frame**: 프레임이 심각한 손상을 입으면 전체 AF의 성능이 크게 저하되고, 파괴될 경우 AF는 작동 불능 상태가 됩니다.
- **Body**: 프레임이 정상이더라도 Body 파츠가 파괴되면 AF가 무력화됩니다.
- **Head**: 파괴 시 센서 기능이 상실되어 정확도와 감지 능력이 크게 저하됩니다.
- **Arms**: 파괴된 팔에 장착된 무기는 사용할 수 없습니다.
- **Legs**: 파괴 시 이동 속도와 회피율이 대폭 감소합니다.
- **Backpack**: 파괴 시 특수 능력 사용이 불가능하고 에너지 효율이 저하됩니다.

### 전투 시스템
- 자동 시뮬레이션 기반 전투로 진행됩니다.
- 전투 과정은 텍스트 로그 방식으로 표시됩니다.
  - 각 AF의 행동, 공격, 데미지 정보가 텍스트로 기록됩니다.
  - 중요 이벤트와 전투 결과가 로그에 강조 표시됩니다.
- 각 AF는 자신의 속도 스탯에 따라 독립적으로 행동합니다.
  - 예: 이동 속도가 1인 AF는 1초마다 이동, 속도가 2인 AF는 0.5초마다 이동
  - 공격 속도에 따라 사격 주기가 결정됩니다.
- AF는 자신의 사거리 내에 적이 있을 경우 자동으로 타겟팅하여 공격합니다.
- 플레이어는 전투 시작 전 AF 배치, 장비 설정, 행동 우선순위를 지정합니다.
- 전투가 시작되면 사전에 설정된 전략에 따라 자동으로 전투가 진행됩니다.
- 전투 중 특수 능력 발동 조건을 미리 설정할 수 있습니다.

### 파일럿 시스템
- 각 AF는 파일럿이 조종하며, 파일럿의 능력이 AF의 성능에 직접적인 영향을 줍니다.
- **파일럿 능력치**:
  - **전투 기술**: 무기 정확도와 크리티컬 확률에 영향을 줍니다.
  - **반응 속도**: 회피율과 선제 공격 확률에 영향을 줍니다.
  - **기계 적응력**: 프레임-파츠 호환성 페널티를 감소시킵니다.
  - **전술 이해도**: 특수 능력 효율과 쿨다운 시간에 영향을 줍니다.
- **파일럿 스킬 타입**:
  - **공격형 스킬**: 데미지 증가, 관통력 향상, 연속 공격 등
  - **방어형 스킬**: 내구도 강화, 데미지 감소, 파츠 내구도 회복 등
  - **지원형 스킬**: 아군 강화, 적군 약화, 장비 효율 증가 등
  - **특수형 스킬**: 독특한 전장 환경 변화나 승리 조건에 영향을 주는 능력
- **파일럿 성장 시스템**:
  - 미션 완료 시 경험치를 획득하여 레벨 업이 가능합니다.
  - 레벨 업을 통해 능력치 상승과 새로운 스킬을 획득할 수 있습니다.
  - 특정 AF 타입과의 상성으로 추가 보너스를 받을 수 있습니다.

## 게임 진행 사이클
1. **준비 단계**:
   - **AF 설계**: 프레임 선택 후 파츠 조합으로 자신만의 AF를 구성합니다.
   - **파일럿 배정**: AF 특성에 맞는 파일럿을 선택하고 스킬을 설정합니다.
   - **장비 선택**: 무기와 보조 장비를 AF에 장착합니다.

2. **작전 단계**:
   - **미션 선택**: 현재 AF와 파일럿 능력에 적합한 미션을 선택합니다.
   - **전략 수립**: 전투장 정보를 분석하고 AF 배치 및 행동 우선순위를 설정합니다.
   - **전투 관전**: 설정한 전략에 따라 자동으로 진행되는 전투를 텍스트 로그로 관전합니다.

3. **발전 단계**:
   - **전투 분석**: 전투 결과와 로그를 분석하여 전략과 AF의 장단점을 파악합니다.
   - **보상 획득**: 새로운 파츠, 무기, 파일럿 또는 업그레이드 재료를 획득합니다.
   - **성장**: 파일럿 레벨 업, AF 업그레이드, 새로운 조합 실험을 통해 전력을 강화합니다.

4. **순환**: 더 강한 AF와 파일럿으로 더 어려운 미션에 도전하는 과정을 반복합니다.

## 기술적 접근
- **UI 시스템**:
  - AF 커스터마이징은 직관적인 그래픽 인터페이스로 구현합니다.
  - 전투 인터페이스는 텍스트 로그 기반으로 구현하여 모든 행동과 결과를 상세히 표시합니다.
  - 주요 전투 이벤트는 특별한 형식으로 강조하여 가독성을 높입니다.
  - AF 상태, 남은 내구도, 특수 능력 쿨다운 등 중요 정보를 실시간으로 제공합니다.

- **데이터 구조**:
  - 모든 파츠와 프레임은 모듈식 데이터 구조로 관리하여 확장성을 높입니다.
  - 전투 계산 공식은 명확하게 문서화하여 플레이어가 전략을 수립하는 데 도움을 줍니다.
  - 파일럿 스킬과 능력치는 메카닉 성능에 직접적으로 영향을 미치는 수치로 연결됩니다.

- **개발 우선순위**:
  - 1차: 코어 AF 시스템과 전투 시스템의 기본 기능 구현
  - 2차: 파츠와 프레임의 다양화 및 밸런싱
  - 3차: 파일럿 시스템 구현 및 미션 다양화
  - 4차: UI 개선 및 게임 플레이 피드백 반영