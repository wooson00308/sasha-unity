---
description: 
globs: 
alwaysApply: true
---
# AF 프로젝트 구조

이 문서는 `Assets/AF` 디렉토리 아래의 주요 폴더 구조와 핵심 스크립트를 설명합니다.

```
Assets/AF/
├── Data/         # 게임 데이터 (ScriptableObjects 등) 관련 폴더
├── Scenes/       # 게임 씬 파일 폴더
├── Scripts/      # 모든 C# 스크립트 폴더
│   ├── Combat/   # 전투 시스템 관련 스크립트
│   │   ├── CombatSimulatorService.cs # 전투 시뮬레이션 핵심 로직
│   │   ├── TextLogger.cs             # 전투 텍스트 로그 기록
│   │   ├── CombatActionEvents.cs     # 전투 행동 관련 이벤트
│   │   ├── DamageEvents.cs           # 데미지 관련 이벤트
│   │   ├── ... (기타 이벤트 파일)      # PartEvents, StatusEffectEvents 등
│   │   ├── ICombatSimulatorService.cs # 전투 서비스 인터페이스
│   │   └── ITextLogger.cs            # 로거 인터페이스
│   ├── EventBus/ # 이벤트 버스 시스템 스크립트
│   │   ├── EventBus.cs               # 이벤트 발행/구독 관리
│   │   ├── EventBusService.cs        # 이벤트 버스 서비스
│   │   └── IEvent.cs                 # 이벤트 기본 인터페이스
│   ├── Examples/ # 예제 코드 스크립트
│   │   └── ExampleTimer.cs           # 타이머 예제 등
│   ├── Models/   # 데이터 모델 스크립트
│   │   ├── ArmoredFrame.cs           # 메카닉 유닛 정의
│   │   ├── Part.cs                   # 파츠 기본 클래스
│   │   ├── Parts/                    # 개별 파츠 구현 (Head, Body 등)
│   │   ├── Weapon.cs                 # 무기 정의
│   │   ├── Pilot.cs                  # 파일럿 정의
│   │   └── Stats.cs                  # 스탯 데이터 구조
│   ├── Services/ # 서비스 로케이터 및 기타 서비스 스크립트
│   │   ├── ServiceLocator.cs         # 서비스 중앙 관리
│   │   ├── ServiceManager.cs         # 서비스 생명주기 관리
│   │   └── IService.cs               # 서비스 기본 인터페이스
│   └── Tests/    # 유니티 테스트 관련 스크립트
│       └── CombatTestRunner.cs       # 전투 테스트 실행
└── ... (기타 에셋 폴더)
```

---
*이 문서는 주요 구조를 보여주며, 모든 파일이 포함된 것은 아닙니다. 자세한 내용은 각 폴더를 직접 확인하세요.* 